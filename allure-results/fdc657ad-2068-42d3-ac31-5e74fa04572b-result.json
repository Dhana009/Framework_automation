{"name": "test_login_success", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.goto: Timeout 60000ms exceeded.\nCall log:\n  - navigating to \"https://example.com/login\", waiting until \"load\"", "trace": "page = <Page url='about:blank'>\n\n    @pytest.mark.smoke\n    def test_login_success(page):\n        login_page = LoginPage(page)\n>       login_page.open_login_page(BASE_URL)\n\n..\\..\\Automation_framework_playwright\\playwright_automation\\tests\\test_login.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\login_page.py:14: in open_login_page\n    self.goto(f\"{base_url}/login\")\npages\\base_page.py:16: in goto\n    self.page.goto(url)\n..\\..\\Automation_framework_playwright\\playwright_automation\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:9019: in goto\n    self._sync(\n..\\..\\Automation_framework_playwright\\playwright_automation\\venv\\Lib\\site-packages\\playwright\\_impl\\_page.py:556: in goto\n    return await self._main_frame.goto(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\Automation_framework_playwright\\playwright_automation\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:153: in goto\n    await self._channel.send(\n..\\..\\Automation_framework_playwright\\playwright_automation\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x0000025B4868D400>, cb = <function Channel.send.<locals>.<lambda> at 0x0000025B486C8900>, is_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.goto: Timeout 60000ms exceeded.\nE           Call log:\nE             - navigating to \"https://example.com/login\", waiting until \"load\"\n\n..\\..\\Automation_framework_playwright\\playwright_automation\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: TimeoutError"}, "start": 1760631193679, "stop": 1760631254702, "uuid": "a0c5115b-384a-46e2-bf74-880f5cd0a00a", "historyId": "86600b41e86dab7ca99f472fa61e4b05", "testCaseId": "86600b41e86dab7ca99f472fa61e4b05", "fullName": "tests.test_login#test_login_success", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "22180-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}